plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: 'maven-publish'

def config = rootProject.ext.android
def library = rootProject.ext.dependencies
android {
    compileSdk config.compileSdk

    defaultConfig {
        minSdk config.minSdk
        targetSdk config.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            consumerProguardFiles 'proguard-rules.pro'
        }

        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        //启用对新语言api的支持
        //coreLibraryDesugaringEnabled true
        //设置Java兼容性为Java 8
        targetCompatibility config.targetCompatibility
        sourceCompatibility config.sourceCompatibility
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation library.java_junit
    androidTestImplementation library.android_junit
    androidTestImplementation library.espresso_core
}

/**
 * 上传到私有仓库
 */
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                //如果是war包填写components.web，如果是jar包填写components.java
                from components.release
                //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
                groupId pom_tabext_groupId
                artifactId pom_tabext_artifactId
                version pom_tabext_version
                // aar文件所在的位置
                // module打包后所在路径为module模块下的build/outputs/aar，生成的aar名称为：module名-release.aar
                //artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }
        }
        repositories {
            maven {
                allowInsecureProtocol = true
                //指定要上传的maven私服仓库
                url = warehouse
                //认证用户和密码
                credentials {
                    username warehouse_library_userName
                    password warehouse_library_password
                }
            }
        }
    }
}

